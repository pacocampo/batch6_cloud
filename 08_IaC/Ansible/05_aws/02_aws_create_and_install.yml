- name: Create a sandbox instance
  hosts: localhost
  remote_user: ec2-user #El usuario para conectarse por ssh, por default es ec2-user
  gather_facts: false
  vars:
    keypair: demo-ansible-key-pair #Nombre de los Key pair
    instance_type: t2.micro
    security_group: launch-wizard-1
    image: ami-04681a1dbd79675a5
    region: us-east-1
  tasks:
    - name: Launch instance
      ec2:
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: subnet-2a16f067
         assign_public_ip: yes
         count: 2 #Número de instancias a crear
      register: ec2

    - name: Add new instance to host group
      add_host: #Modulo para agrupar host
        hostname: "{{ item.public_ip }}"
        groupname: launched # nombre de grupo de instancias creadas
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      with_items: "{{ ec2.instances }}"

#Install python & httpd
- hosts: launched #nombre de grupo de instancias
  become: true
  connection: ssh
  remote_user: ec2-user
  gather_facts: false
  pre_tasks:
    - name: 'install python'
      raw: 'sudo yum -y install python'
  tasks:
  - name: Install httpd
    yum:
      name: httpd
      state: present
  #Podemos iniciar un servicio con el módulo service
  - service: 
      name: httpd
      state: started
      enabled: yes
  #Instala Docker
  - name: Instala Docker
    yum:
      name: docker-ce
      state: latest
  - service:
      name : docker
      state: started
      enabled: yes



